#!/bin/sh
# make a auto-layout paginated list of color info using decksh markup.
#
# the input is a colon-separated list of name:rgb:category
# the output columns are: color swatch, name, hex, rgb
#
# run as:
# $ coloridx "title" file
#
title="$1"
shift
awk -F: -v title="$title" '

function tablehead(x1, x2, x3, y, textsize) {
	printf "text \"name\" %g %g %g\n", x1, y, textsize
	printf "text \"hex\" %g %g %g\n",  x2, y, textsize
	printf "text \"RGB\" %g %g %g\n",  x3, y, textsize
}

BEGIN {
	
	top=80
	heady=top+4
	bot=top-70
	right=80
	newcolincr=50
	tty=top+10
	page=1
	titlesize=3
	headsize=1.2

	col1=3
	col2=5
	col3=25
	col4=33

	size=1.8
	incr=2.5

	cx=col1
	tx=col2
	hx=col3
	rx=col4

	cr=size
	ts=size
	rs=size
	hs=size

	cy=top+0.5
	ty=top
	ry=top
	hy=top

	bgcolor="\"black\""
	fgcolor="\"white\""

	# initial title and heading
	printf "slide %s %s\n", bgcolor, fgcolor
	printf "ctext \"%s\" 50 %g %g \"serif\"\n", title, tty, titlesize
	tablehead(col2, col3, col4, heady, headsize)
}
{

	# make a row: color swatch, name, hex, rgb
	split($2,rgb,",")
	if ($1 == bgcolor) {
		printf "square %g %g %g %s\n", cx, cy, cr+0.3, fgcolor
		printf "hline %g %g %g %g %s\n", tx, ty+(ts/3), 5, ts+0.2, fgcolor
	}	
	printf "square %g %g %g %s\n", cx, cy, cr, $1
	printf "text %s %g %g %g \"mono\" %s\n", $1, tx, ty, ts, $1
	printf "text \"#%02x%02x%02x\" %g %g %g \"mono\"\n", rgb[1], rgb[2], rgb[3], hx, hy, hs
	printf "text \"rgb(%d,%d,%d)\" %g %g %g \"mono\"\n", rgb[1], rgb[2], rgb[3], rx, ry, rs

	# next row
	cy-=cr*incr
	ty-=ts*incr
	ry-=rs*incr
	hy-=hs*incr

	# if you reach the bottom, make a new set of columns
	if (cy <= bot) {
		cy=top+0.5
		ty=top
		ry=top
		hy=top
		cx+=newcolincr
		tx+=newcolincr
		rx+=newcolincr
		hx+=newcolincr
		tablehead(tx, hx, rx, heady, headsize)
	}

	# if you roll off the right, make a new page
	if (tx >= right) {
		page++
		print "eslide"
		printf "slide %s %s\n", bgcolor, fgcolor
		printf "ctext \"%s (%d)\" 50 %g %g \"serif\"\n", title, page, tty, titlesize
		cy=top+0.5
		ty=top
		ry=top
		hy=top
		cx=col1
		tx=col2
		hx=col3
		rx=col4
		tablehead(tx, hx, rx, heady, headsize)
	}
}
END {
	print "eslide"
}

' $*