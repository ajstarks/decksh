deck
	canvas 900 600
	bgcolor="white"
	fgcolor="black"
	accentcolor="#800000"
	argcolor="#0000aa"
	spotcolor=accentcolor
	kwcolor=accentcolor
	objcolor="#7f7f7f"
	hlcolor="#0000aa"
	hlop=10
	hlsize=7

	ty=90
	ts=3.2
	ets=2
	ls=ts*0.55
	lsty=82
	lfs=2.3
	tbheadsize=4
	cx=50
	mid=50
	ey=20
	ely=ey-10
	initlcol=7
	coordsize=2
	coordop=70
	exy=5
	left=10
	top=85
	titlesize=5

	lcolsize=19
	lcolsize2=lcolsize*0.6
	rc=initlcol

	tbl1="description"
	tbl2="keyword"
	tbl3="mandatory"
	tbl4="optional"

	// title page
	slide bgcolor fgcolor
		clist 30 60 10 "sans" objcolor 100 1.0
			li "decksh"
			li "reference" "sans" accentcolor
		elist
		clist 75 10 1.5 "sans" objcolor 100 1.5
			li "Version"
			li deckshVersion
		elist
		include "decksh-logo.dsh"
	eslide

	slide bgcolor fgcolor
		ctext "Introduction" mid ty 5 "serif"
		textblock "decksh is a Domain-Specific Language (DSL) for making presentations, visualizations, and information displays." 15 75 60 3 "serif"
		textblock "This reference describes the keywords and elements of the language, how to structure decksh code, along with how to use  variables, assignments, and binary operations." 15 50 60 3 "serif"
		textblock "Also included is a color reference and a detailed description, with examples, for all decksh elements." 15 20 60 3 "serif"
	eslide

	include "keywords.dsh"
	include "kw-ex.dsh"
	include "struct.dsh"
	include "grid.dsh"

	// defining vars
	slide bgcolor fgcolor
		ctext "Defining and using variables" mid ty 5 "serif"
		
		ax=20
		ay=80

		ctext "name"  ax 85 1.5
		ctext "is"    25 85 1.5
		text "thing"  29 85 1.5
		list ax ay 4 "mono" "" 100 1.5
			li "x = 3.14159265"
			li `s = "hello"`
			li "y = x"
			li "x = a + b"
			li "x *= 10"
			li
			li "text s x y 2"
			li "dump [var list]"
		elist
		ax+=35
		list ax ay 4 "sans" "gray" 100 1.5
			li "number"
			li "string"
			li "another variable"
			li "binary operation"
			li "assignment operator"
			li
			li "variable use"
			li "dump the value of variables"
		elist

		text "Note: the reserved variable deckshVersion contains the version of decksh" 20 5 1.5
		etext deckshVersion 80 5 1.5 "mono"
	eslide

	// binop
	slide bgcolor fgcolor
		ctext "Binary  operators" mid ty 5 "serif" 
		ax=20
		list ax ay 4 "mono" "" 100 1.5
			li "x = a + b"
			li `x = a - b`
			li "x = a * b"
			li "x = a / b"
			li "x = a % b"
		elist
		ax+=35
		list ax ay 4 "sans" "gray" 100 1.5
			li "addition"
			li "subtraction"
			li "multiplication"
			li "division"
			li "modulo"
		elist
	eslide

	// assignment operators
	slide bgcolor fgcolor
		ctext "Assignment operators" mid ty 5 "serif" 
		ax=20
		list ax ay 4 "mono" "" 100 1.5
			li "x += 10"
			li `x -= 10`
			li "x *= 10"
			li "x /= 10"
		elist
		ax+=35
		list ax ay 4 "sans" "gray" 100 1.5
			li "increase x by 10"
			li "decrease x by 10"
			li "multiply x by 10"
			li "divide x by 10"
		elist
	eslide

	// special assignments
	slide bgcolor fgcolor
		ctext "Special Assignments" mid ty 5 "serif" 
		ax=5
		list ax ay 3 "mono" "" 100 1.3
			li "p=(expr, expr)"
			li "p=polar cx cy r theta"
			li "x=polarx cx cy r theta"
			li "y=polary cx cy r theta"
			li "v=format string expr"
			li "v=substr string begin end"
			li "v=random v1 v2"
			li "v=vmap data v1 v2 v3 v4"
			li "v=area expr"
			li "v=cosine expr"
			li "v=sine expr"
			li "v=sqrt expr"
			li "v=tangent expr"
		elist
		ax+=50
		list ax ay 3 "sans" "gray" 100 1.3
			li "coordinates (p_x, p_y)"
			li "polar coordinate (p_x, p_y)"
			li "polar coordinate (x)"
			li "polar coordinate (y)"
			li "number formatting"
			li "substring"
			li "random number"
			li "range map"
			li "area"
			li "cosine"
			li "sine"
			li "square root"
			li "tangent"
		elist
	eslide

	// variables and assignments, examples
//	slide bgcolor fgcolor
//		ctext "Variables and Assignments" mid ty 5 "serif"
//		etext "Using variables"       20 80 2
//		etext "Binary operations"     20 50 2
//		etext "Assignment operations" 20 23 2
//		list 25 80 2.7 "mono" "" 100 1.2
//			li "x=10"
//			li "y=80.45"
//			li "size=x/5"
//			li `s="Hello"`
//			li "text s x y size"
//			li
//			li "a=100+200.7"
//			li "a=x-10"
//			li "a=x*10"
//			li "a=x/y"
//			li "a=x%y"
//			li
//			li "x+=10"
//			li "x-=10"
//			li "x*=10"
//			li "x/=10"
//		elist
//
//		list 47 80 2.7 "mono" "gray" 100 1.2
//			li "// assign 10 to x"
//			li "// assign 80.45 to  y"
//			li "// x divided by 5 to size"
//			li "// s has the string value 'Hello'"
//			li "// Use the variables"
//			li
//			li "// addition"
//			li "// subtraction"
//			li "// multiplication"
//			li "// division"
//			li "// modulo"
//			li
//			li "// increase  x by 10"
//			li "// decrease  x by 10"
//			li "// multiply  x by 10"
//			li "// divide  x by 10"
//		elist
//	eslide

	// colors, fonts, opacity, gradient
	slide bgcolor fgcolor
		hline 5 72 85 4 hlcolor hlop
		ctext "Colors, fonts, opacity, gradient" mid ty 5 "serif"
		text "Colors" 6 70 3 "sans" objcolor
		text "Fonts"  35 70 3  "sans" objcolor
		text "Opacity (0-100)" 68 70 3  "sans" objcolor

		list 6 60 3 "mono" "steelblue"
			li `"steelblue"`
			li `"#4682b4"`
			li `"rgb(70,130,180)"`
			li `"hsv(207,61,71)"`
		elist

		list 35 60 3 "mono"
			li `"sans"`
			li `"serif"`
			li `"mono"`
			li `"symbol"`
		elist

		list 50 60 3
			li "Sans Serif"
			li "Serif" "serif"
			li "Monospace"  "mono"
			li "abcde" "symbol"
		elist

		list 68 60 3
			li "100"
			li "50"
			li "25"
			li "10"
		elist

		circle 80 62 3 accentcolor
		circle 80 53 3 accentcolor 50
		circle 80 44 3 accentcolor 25
		circle 80 35 3 accentcolor 10

		vline 33 25 50 0.1
		vline 66 25 50 0.1
		vline  5 25 50 0.1
		vline 90 25 50 0.1
		hline 5 25 85  0.1

		text `"red/blue/90"` 6 15 3 "mono" "steelblue"
		text "(applies to rect and square only)"  6 10 1.5 "serif"
		rect 30 16 6 4 "red/blue/90" 
	eslide

	// color indices: produce in the code directory: $ ./mkcats.sh
	include "code/color-index.dsh"
	include "code/neutrals.dsh"
	include "code/reds.dsh"
	include "code/greens.dsh"
	include "code/blues.dsh"
	include "code/violets.dsh"
	include "code/yellows.dsh"

	// Object index
	include "oi.dsh"
	
	// Text index
	slide bgcolor fgcolor
		rc=initlcol
		hlfs=lfs/2
		llsty=lsty+hlfs
		ctext "Textual Elements" mid ty 5 "serif"
		hline rc llsty 90 tbheadsize "gray" 20
		list rc lsty lfs
			li tbl1  "sans" objcolor
			li "Left-aligned"
			li "Centered"
			li "End-aligned"
			li "Rotated"
			li "Text on an arc"
			li "Block text"
			li "Block text from file"
			li "File contents"
			li "Code listing"
		elist

		rc+=lcolsize
		list rc lsty lfs "mono" kwcolor
			li tbl2 "sans" objcolor
			li "text"
			li "ctext"
			li "etext"
			li "rtext"
			li "arctext"
			li "textblock"
			li "textblockfile"
			li "textfile"
			li "textcode"
		elist

		rc+=16
		list rc lsty lfs "mono" argcolor
			li tbl3 "sans" objcolor
			li `"..." x y fontsize`
			li `"..." x y fontsize`
			li `"..." x y fontsize`
			li `"..." x y angle fontsize`
			li `"..." x y rad a1 a2 fontsize`
			li `"..." x y w fontsize`
			li `"file" x y w fontsize`
			li `"file" x y fontsize`
			li `"file" x y w fontsize`
		elist

		rc+=33
		list rc lsty lfs "mono" optcolor
			li tbl4 "sans" objcolor
			li "font color op link"
			li "font color op link"
			li "font color op link"
			li "font color op link"
			li "font color op link"
			li "font color op link"
			li "font color op link"
			li "font color op spacing"
			li "font color"
		elist
	eslide

	// text
	slide bgcolor fgcolor
		ky=70
		cy=ky-10
		ly=cy-15
		lw=3
		text "hello, world" cx ky 7 "sans" objcolor
		circle cx ky coordsize accentcolor
		hline 0 47 100 hlsize hlcolor hlop
		ctext "text"                     20 ly ts "mono" kwcolor
		ctext `"..." x y fontsize`       40 ly ts "mono" argcolor
		ctext "font color op link"       71 ly ts "mono" optcolor
		ctext "(x,y)" cx 65 lw "mono"

		text "abc" 20 20 4
		text "abc" 75 20 7 "mono" "maroon"

		ctext `text "abc" 20 20 4` 22 ely ets "mono"
		ctext `text "abc" 75 20 7 "mono" "maroon"` 82 ely ets "mono"
	eslide

	// ctext
	slide bgcolor fgcolor
		ky=70
		cy=ky-10
		ly=cy-15
		lw=3
		ctext "hello, world" cx ky 7 "sans" objcolor
		ctext "ctext"                     20 ly ts "mono" kwcolor
		ctext `"..." x y fontsize`        40 ly ts "mono" argcolor
		ctext "font color op link"        71 ly ts "mono" optcolor
		circle cx ky coordsize accentcolor
		hline 0 47 100 hlsize hlcolor hlop
		ctext "(x,y)" cx 65 lw "mono"

		ctext "abc" 20 20 4
		ctext "abc" 80 20 7 "mono" "maroon"

		ctext `ctext "abc" 20 20 4` 20 ely ets "mono"
		ctext `ctext "abc" 80 20 7 "mono" "maroon"` 80 ely ets "mono"
	eslide

	// etext
	slide bgcolor fgcolor
		ky=70
		cy=ky-10
		ly=cy-15
		lw=3
		etext "hello, world" cx ky 7 "sans" objcolor
		circle cx ky coordsize accentcolor
		hline 0 47 100 hlsize hlcolor hlop
		ctext "etext"                     20 ly ts "mono" kwcolor
		ctext `"..." x y fontsize`        40 ly ts "mono" argcolor
		ctext "font color op link"        71 ly ts "mono" optcolor
		ctext "(x,y)" cx 65 lw "mono"

		etext "abc" 20 20 4
		etext "abc" 80 20 7 "mono" "maroon"

		ctext `etext "abc" 20 20 4` 20 ely ets "mono"
		ctext `etext "abc" 80 20 7 "mono" "maroon"` 80 ely ets "mono"
	eslide

	// rtext
	slide bgcolor fgcolor
		rtext "hello, world" cx ky 25 7 "sans" objcolor
		hline 0 47 100 hlsize hlcolor hlop
		ctext "rtext"                      15 ly ts "mono" kwcolor
		ctext `"..." x y angle fontsize`   40 ly ts "mono" argcolor
		ctext "font color op link"         76 ly ts "mono" optcolor
		circle cx ky coordsize accentcolor
		ctext "(x,y)" cx 65 lw "mono"

		rtext "abc" 20 20 30 3
		rtext "abc" 50 20 90 5
		rtext "abc" 80 20 270 4 "sans" "maroon"

		ctext `rtext 20 20 30 3` 20 ely ets "mono"
		ctext `rtext 50 20 90 5` 50 ely ets "mono"
		ctext `rtext 80 20 270 4 "sans" "maroon"` 80 ely ets "mono" 
	eslide

	// arctext
	slide bgcolor fgcolor
		a1x=polarx 50 ky 22 170
		a1y=polary cx ky 22 170
		a2x=polarx cx ky 22 10
		a2y=polary cx ky 22 10
		
		arctext "hello there world" cx ky 15 170 10 5 "mono" objcolor
		circle cx ky coordsize accentcolor
		ctext "(x,y)" cx 65 lw "mono"
		ctext "a1" a1x a1y lw "mono"
		ctext "a2" a2x a2y lw "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "arctext"                         15 ly ts "mono" kwcolor
		ctext `"..." x y radius a1 a2 fontsize` 42 ly ts "mono" argcolor
		ctext "font color op link"              83 ly ts "mono" optcolor

		arctext "What is up" 25 20 10 180 90 3 "mono"
		arctext "This is curvy" 75 30 10 180 360 3 "mono"

		ctext `arctext "What is up" 25 20 10 180 90 3 "mono"` 25 ely ets "mono"
		ctext `arctext "This is curvy" 75 30 10 180 360 3 "mono"` 75 ely ets "mono"
		
	eslide

	// textblock
	slide bgcolor fgcolor
		tbw=60
		tb="“Where justice is denied, where poverty is enforced, where ignorance prevails, and where any one class is made to feel that society is an organized conspiracy to oppress, rob and degrade them, neither persons nor property will be safe.”"
		textblock tb 20 85 tbw 3 "sans" objcolor
		circle 20 85 coordsize accentcolor 50
		etext "(x,y)" 19 85  lw "mono"
		ctext "w" cx 94 lw "mono"
		ubrace cx 93 tbw 2 4
		hline 0 47 100 hlsize hlcolor hlop
		ctext "textblock"                     15 ly ts "mono" kwcolor
		ctext `"..." x y w fontsize`          40 ly ts "mono" argcolor
		ctext "font color op link"            72 ly ts "mono" optcolor

		textblock tb 10 35 30 1.5
		textblock tb 50 35 10 1 "sans" "maroon"

		text `textblock "..." 10 35 30 2` 10 ely ets "mono"
		text `textblock "..." 50 35 10 1 "sans" "maroon"` 50 ely ets "mono"
	eslide

	// textfile
	slide bgcolor fgcolor
		textfile "code/example.txt" 20 80 4 "sans" objcolor
		circle 20 80 coordsize accentcolor 50
		etext "(x,y)" 19 80  lw "mono"
		hline 0 47 100 hlsize hlcolor hlop
		ctext "textfile"               17 ly ts "mono" kwcolor
		ctext `"..." x y fontsize`     40 ly ts "mono" argcolor
		ctext "font color op link"     71 ly ts "mono" optcolor

		textfile  "code/example.txt" 10 35 2
		text `textfile "example.txt" 10 35 2` 10 ely ets "mono"

		textfile  "code/hw-go" 55 35 1.6 "mono" "maroon"
		text `textfile "hw-go" 55 35 1.6 "mono" "maroon"` 55 ely ets "mono"
	eslide

	// textcode
	slide bgcolor fgcolor
		textcode "code/hw-go" 20 85 50 2
		ctext "(x,y)" 20 95  lw "mono"
		arrow 20 95 20 88 0.1 1 1
		hline 0 47 100 hlsize hlcolor hlop
		ctext "textcode"               20 ly ts "mono" kwcolor
		ctext `"..." x y w fontsize`   44 ly ts "mono" argcolor
		ctext "font color"             70 ly ts "mono" optcolor
		ubrace 42.5 92 50 2 4
		ctext "w" 42.5 93 lw "mono"

		textcode  "code/hw-go" 10 35 25 1.0
		text `textcode "hw-go" 10 35 25 1.0` 10 ely ets "mono"

		textcode  "code/hw-go" 55 35 40 1.6 "maroon"
		text `textcode "hw-go" 55 35 40 1.6 "maroon"` 55 ely ets "mono"
	eslide

	// Graphics index
	slide bgcolor fgcolor
		rc=initlcol
		lcolsize*=1.2
		listspacing=1.5
		ctext "Graphical Elements" mid ty 5 "serif"
		hline rc llsty 90 tbheadsize "gray" 20
		list rc lsty lfs "sans" "" 100 listspacing
			li tbl1 "sans" objcolor
			li "Line"
			li "Horizontal line"
			li "Vertical line"
			li "Elliptical arc"
			li "Quadratic Bezier"
			li "Circle"
			li "Area circle"
			li "Ellipse"
			li "Square"
			li "Rectangle"
			li "Rounded rectangle"
			li "Pill shape"
			li "Polygon"
			li "Polyline"
			li "N-sided star"
		elist
		rc+=lcolsize
		list rc lsty lfs "mono" kwcolor 100 listspacing
			li tbl2 "sans" objcolor
			li "line"
			li "hline"
			li "vline"
			li "arc"
			li "curve"
			li "circle"
			li "acircle"
			li "ellipse"
			li "square"
			li "rect"
			li "rrect"
			li "pill"
			li "polygon"
			li "polyline"
			li "star"
		elist
		rc+=12
		list rc lsty lfs "mono" argcolor 100 listspacing
			li tbl3 "sans" objcolor
			li "x1 y1 x2 y2 lw"
			li "x y w"
			li "x y h"
			li "x y w h a1 a2"
			li "bx by cx cy ex ey"
			li "x y w"
			li "x y area"
			li "x y w h"
			li "x y w"
			li "x y w h"
			li "x y w h radius"
			li "x y w h"
			li `"x1 x2...xn" "y1 y2...yn"`
			li `"x1 x2...xn" "y1 y2...yn"`
			li "x y sides inner outer"
		elist
		rc+=32
		list rc lsty lfs "mono" optcolor 100 listspacing
			li tbl4 "sans" objcolor
			li "color op"
			li "lw color op"
			li "lw color op"
			li "lw color op"
			li "lw color op"
			li "color op"
			li "color op"
			li "color op"
			li "color op"
			li "color op"
			li "color"
			li "color"
			li "color op"
			li "lw color op"
			li "color op"
		elist
	eslide

	// Line
	slide bgcolor fgcolor
		ky=70
		cy=ky-10
		ly=cy-15
		lw=3
		line 20 ky 80 ky lw "black" 30
		circle 20 ky lw accentcolor
		circle 80 ky lw accentcolor
		ctext "(x1,y1)" 20 cy ts "mono"
		ctext "(x2,y2)" 80 cy ts "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "line"                  32 ly ts "mono" kwcolor
		ctext "x1 y1 x2 y2 lw"        45 ly ts "mono" argcolor
		ctext "color op"              65 ly ts "mono" optcolor
		ctext "lw" 13 69 ts "mono"
		lbrace 16 70 lw 1 1

		line 10 20 30 20
		ctext "line 10 20 30 20" 20 ely ls "mono"

		line 40 20 60 30 0.5
		ctext "line 40 20 60 30 0.5" cx ely ls "mono"

		line 70 20 95 30 1.5 accentcolor
		ctext `line 70 20 95 30 1.5 "maroon"` 82 ely ls "mono"
	eslide

	// hline
	slide bgcolor fgcolor
		w=30
		hline 35 ky w lw "black" 30
		circle 35 ky lw accentcolor
		ctext "(x,y)" 35 65 ts "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "hline"                  40 ly ts "mono" kwcolor
		ctext "x y w"                  46 ly ts "mono" argcolor
		ctext "lw color op"            60 ly ts "mono" optcolor
		ubrace 50 77 w 2 4
		ctext "w" 50 78 ts "mono"
		ctext "lw" 68 69 ts "mono"

		hline 15 ey 10
		ctext "hline 15 20 10" 20 ely ls "mono"

		hline 40 ey 20 1
		ctext "hline 40 20 20 1" 50 ely ls "mono"

		hline 70 ey 20 5 accentcolor 20
		ctext `hline 70 20 20 5 "maroon" 20` 80 ely ls "mono"
	eslide

	// vline
	slide bgcolor fgcolor
		vline cx ky 20 lw "black" 30
		circle cx ky 3 accentcolor
		hline 0 47 100 hlsize hlcolor hlop
		etext "vline"                  40 ly ts "mono" kwcolor
		ctext "x y w"                  46 ly ts "mono" argcolor
		ctext "lw color op"            60 ly ts "mono" optcolor
		ctext "(x,y)" 50 65 ts "mono"
		ctext "lw" 50 92 ts "mono"
		lbrace 45 80 20 2 2
		ctext "h" 42 80 ts "mono"

		vline 20 ey 15
		ctext `vline 20 20 15` 20 ely ls "mono"

		vline cx ey 15 2
		ctext "vline 50 20 15 2" 50 ely ls "mono"

		vline 80 ey 15 10 accentcolor 20
		ctext `vline 80 20 15 10 "maroon" 20` 80 ely ls "mono"
	eslide

	// arc
	slide bgcolor fgcolor
		aw=30
		ah=20
		arc cx ky aw ah  0 180 0.5
		circle cx ky coordsize accentcolor
		hline 0 47 100 hlsize hlcolor hlop
		etext "arc"                  34 ly ts "mono" kwcolor
		ctext "x y w h a1 a2"        46 ly ts "mono" argcolor
		ctext "lw color op"          67 ly ts "mono" optcolor
		ctext "(x,y)" cx cy ts "mono"
		ubrace 50 92 aw 2 4
		ctext "w" cx 93 ts "mono"
		//vline 30 y 15
		lbrace 29 77 15 2 2
		ctext "h" 27 77 ts "mono"
		text "a1" 65 cy ts "mono"
		etext "a2"  35 cy ts "mono"

		arc 20 ey 15 15 0 180
		ctext "arc 20 20 15 15 0 180" 20 ely ls "mono"

		arc 50 20 15 15 0 90 1	
		ctext "arc 50 20 15 15 0 90 1" 50 ely ls "mono"

		arc 80 20 5 5 0 180 5 accentcolor
		ctext `arc 80 20 5 5 0 180 5 "maroon"` 80 ely ls "mono"
	eslide

	// curve
	slide bgcolor fgcolor
		curve 30 ky 75 95 65 ky 0.5
		circle 30 ky coordsize accentcolor
		circle 65 ky coordsize accentcolor
		circle 70 90 coordsize accentcolor
		ctext "(bx,by)" 30 65 ts "mono"
		ctext "(cx,cy)" 70 92 ts "mono"
		ctext "(ex,ey)" 65 65 ts "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "curve"                  31 ly ts "mono" kwcolor
		ctext "bx by cx cy ex ey"      46 ly ts "mono" argcolor
		ctext "lw color op"            70 ly ts "mono" optcolor

		curve 15 ey 25 30 25 ey
		ctext "curve 15 20 25 30 30 25" 20 ely ls "mono"

		curve 45 ey 55 30 55 ey 1
		ctext "curve 15 20 25 30 30 25" 50 ely ls "mono"

		curve 70 ey 70 30 90 ey 0.5 accentcolor
		ctext `curve 70 20 70 30 90 25 0.5 "maroon"` 80 ely ls "mono"
	eslide

	// Circle
	slide bgcolor fgcolor
		ky=70
		cy=ky-5
		dy=ky+5
		ly=cy-20
		d=20
		r=d/2
		dx=cx-r
		circle cx ky d "black" 30
		circle cx ky coordsize accentcolor
		ctext "(x,y)" cx cy ts "mono"
		ubrace cx 92 d 2 4
		ctext "w" cx 94 ts "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "circle"                  44 ly ts "mono" kwcolor
		ctext "x y w"                   50 ly ts "mono" argcolor
		ctext "color op"                63 ly ts "mono" optcolor

		circle 20 20 10
		ctext "circle 20 20 10" 20 ely ls "mono"

		circle cx 20 10 accentcolor
		ctext `circle 50 20 10 "maroon"` 50 ely ls "mono"

		circle 80 20 5 accentcolor 20
		ctext `circle 80 20 5 "maroon" 20` 80 ely ls "mono"
	eslide

	// acircle
	slide bgcolor fgcolor
		ky=70
		cy=ky-5
		dy=ky+5
		ly=cy-20
		d=20
		r=d/2
		dx=cx-r
		circle cx ky d "black" 30
		circle cx ky coordsize accentcolor
		ctext "(x,y)" cx cy ts "mono"
		ubrace cx 92 d 2 4
		ctext "area" cx 94 ts "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "circle"                     42 ly ts "mono" kwcolor
		ctext "x y area"                   50 ly ts "mono" argcolor
		ctext "color op"                   64 ly ts "mono" optcolor

		acircle 20 20 10
		ctext "acircle 20 20 10" 20 ely ls "mono"

		acircle cx 20 10 accentcolor
		ctext `acircle 50 20 10 "maroon"` 50 ely ls "mono"

		acircle 80 20 5 accentcolor 20
		ctext `acircle 80 20 5 "maroon" 20` 80 ely ls "mono"
	eslide

	// ellipse
	slide bgcolor fgcolor
		cx=50
		ky=70
		cy=ky-5
		dy=ky+5
		ly=cy-20
		d=30
		r=d/2
		dx=cx-r
		w=d*2
		ellipse cx ky w d "black" 30
		circle cx ky coordsize accentcolor
		ctext "(x,y)" cx cy ts "mono"
		ubrace 50 92 w 2 4
		ctext "w" 50 93 3 "mono"
		lbrace 15 ky d 2 2
		ctext "h" 12 ky ts "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "ellipse"                     43 ly ts "mono" kwcolor
		ctext "x y w h"                     50 ly ts "mono" argcolor
		ctext "color op"                    64 ly ts "mono" optcolor

		ellipse 20 20 10 5
		ctext "ellipse 20 20 10 5" 20 ely ls "mono"

		ellipse cx 20 10  5 accentcolor
		ctext `ellipse 50 20 10 5 "maroon"` 50 ely ls "mono"

		ellipse 80 20 5 10 accentcolor 20
		ctext `ellipse 80 20 5 10 "maroon" 20` 80 ely ls "mono"
	eslide

	// square
	slide bgcolor fgcolor
		cx=50
		ky=70
		cy=ky-5
		dy=ky+5
		ly=cy-20
		d=20
		r=d/2
		dx=cx-r
		square cx ky d "black" 30
		circle cx ky coordsize accentcolor
		ctext "(x,y)" cx cy ts "mono"
		ubrace cx 92 d 2 4
		ctext "w" cx 94 3 "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "square"                    44 ly ts "mono" kwcolor
		ctext "x y w"                     50 ly ts "mono" argcolor
		ctext "color op"                  62 ly ts "mono" optcolor

		square 20 20 10
		ctext "square 20 20 10" 20 ely ls "mono"

		square cx 20 10 accentcolor
		ctext `square 50 20 10 "maroon"` 50 ely ls "mono"

		square 80 20 5 accentcolor 20
		ctext `square 80 20 5 "maroon" 20` 80 ely ls "mono"
	eslide

	// rect
	slide bgcolor fgcolor
		cx=50
		ky=70
		cy=ky-5
		dy=ky+5
		ly=cy-20
		d=30
		r=d/2
		dx=cx-r
		w=d*2
		rect cx ky w d "black" 30
		circle cx ky coordsize accentcolor
		ctext "(x,y)" cx cy ts "mono"
		ubrace 50 92 w 2 4
		ctext "w" cx 93 3 "mono"
		lbrace 15 ky d 2 2
		ctext "h" 12 ky ts "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "rect"                        43 ly ts "mono" kwcolor
		ctext "x y w h"                     50 ly ts "mono" argcolor
		ctext "color op"                    64 ly ts "mono" optcolor

		rect 20 20 10 5
		ctext "rect 20 20 10 5" 20 ely ls "mono"

		rect cx 20 10  5 accentcolor
		ctext `rect 50 20 10 5 "maroon"` 50 ely ls "mono"

		rect 80 20 5 10 accentcolor 20
		ctext `rect 80 20 5 10 "maroon" 20` 80 ely ls "mono"
	eslide

	// rrect	
	slide bgcolor fgcolor
		cx=50
		ky=70
		cy=ky-5
		dy=ky+5
		ly=cy-20
		d=30
		r=d/2
		dx=cx-r
		w=d*2.0
		rrh=d*0.8
		rr=3
		rrect cx ky w rrh rr "rgb(150,150,150)"
		circle cx ky coordsize accentcolor
		ctext "(x,y)" cx cy ts "mono"
		text "radius" 20 81 ts "mono"
		ubrace 50 92 w 2 4
		ctext "w" 50 93 3 "mono"
		lbrace 15 ky rrh 2 2
		ctext "h" 12 ky ts "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "rrect"                       37 ly ts "mono" kwcolor
		ctext "x y w h radius"              50 ly ts "mono" argcolor
		ctext "color op"                    69 ly ts "mono" optcolor

		rrect 20 20 10 5 1
		ctext "rrect 20 20 10 5 1" 20 ely ls "mono"

		rrect 80 20 5 10 1 accentcolor 
		ctext `rrect 80 20 5 10 1 "maroon"` 80 ely ls "mono"
	eslide

	// pill
	slide bgcolor fgcolor
		px=40
		ph=10
		ky=70
		cy=ky-5
		dy=ky+5
		ly=cy-20
		d=30
		r=d/2
		dx=cx-r
		pw=d*0.75
		pill px ky pw ph "rgb(150,150,150)"
		circle px ky coordsize accentcolor
		ctext "(x,y)" px cy ts "mono"
		ubrace 50 82 pw 2 4
		ctext "w" 50 83 3 "mono"
		lbrace 29 ky ph 2 2 
		ctext "h" 27 ky ts "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "pill"                 43 ly ts "mono" kwcolor
		ctext "x y w h"              50 ly ts "mono" argcolor
		ctext "color"                61 ly ts "mono" optcolor

		pill 20 20 10 5
		text "pill 20 20 10 5" 20 ely ls "mono"

		pill 80 20 5 10 accentcolor
		text `pill 80 20 5 10 "maroon"` 72 ely ls "mono"
	eslide

	// polygon
	slide bgcolor fgcolor
		polygon "30 70 60" "ky 90 ky"
		ctext "(x1,y1)" 30 65 ts "mono"
		ctext "(x2,y2)" 65 65 ts "mono"
		ctext "(x3,y3)" 70 92 ts "mono"
		circle 30 ky coordsize accentcolor
		circle 60 ky coordsize accentcolor
		circle 70 90 coordsize accentcolor
		hline 0 47 100 hlsize hlcolor hlop
		etext "polygon"                    30 ly ts "mono" kwcolor
		ctext `"x1 x2...xn" "y1 y2...yn"`  51 ly ts "mono" argcolor
		ctext "color op"                   78 ly ts "mono" optcolor

		polygon "10 25 20" "ey 30 ey"
		text `polygon "10 25 20" "20 30 20"` 5 ely ls "mono"

		polygon "70 85 90" "ey 30 ey" accentcolor
		ctext `polygon "70 85 90" "20 30 20" "maroon"` 80 ely ls "mono"
	eslide

	// polyline
	slide bgcolor fgcolor
		polyline "30 70 60" "ky 90 ky"
		ctext "(x1,y1)" 30 65 ts "mono"
		ctext "(x2,y2)" 65 65 ts "mono"
		ctext "(x3,y3)" 70 92 ts "mono"
		circle 30 ky coordsize accentcolor
		circle 60 ky coordsize accentcolor
		circle 70 90 coordsize accentcolor
		hline 0 47 100 hlsize hlcolor hlop
		etext "polyline"                    30 ly ts "mono" kwcolor
		ctext `"x1 x2...xn" "y1 y2...yn"`   51 ly ts "mono" argcolor
		ctext "lw color op"                 81 ly ts "mono" optcolor

		polyline "10 25 20" "ey 30 ey"
		text `polyline "10 25 20" "20 30 20"` 5 ely ls "mono"

		polyline "70 85 90" "ey 30 ey" 0.2 accentcolor
		ctext `polyline "70 85 90" "20 30 20" 0.2 "maroon"` 80 ely ls "mono"
	eslide

	// star
	slide bgcolor fgcolor
		inner=5
		outer=inner*3
		iangle=90
		oangle=162
		star cx ky 5 5 15 "black" 25
		circle cx ky coordsize accentcolor
		ctext "(x,y)" cx cy ts "mono"

		ix=polarx cx ky inner iangle
		iy=polary cx ky inner iangle

		ox=polarx cx ky outer oangle
		oy=polary cx ky outer oangle

		circle ix iy 1 accentcolor
		circle ox oy 1 accentcolor

		line cx ky ix iy 
		line cx ky ox oy
		ctext "outer" 40 70 2
		ctext "inner" 53 72 2
		hline 0 47 100 hlsize hlcolor hlop
		etext "star"                    32 ly ts "mono" kwcolor
		ctext "x y sides inner outer"   50 ly ts "mono" argcolor
		ctext "color op"                74 ly ts "mono" optcolor

		star 20 ey 5 2 6
		ctext "star 20 20 5 2 6" 20 ely ls "mono"
		star 50 ey 12 2 6 accentcolor
		ctext `star 50 20 12 2 5 "maroon"` 50 ely ls "mono"
		star 80 ey 24 2 8 accentcolor 20
		ctext `star 80 ey 24 2 8 "maroon" 20` 80 ely ls "mono"
	eslide

	// Image index
	slide bgcolor fgcolor
		rc=initlcol
		ctext "Images" mid ty 5 "serif"
		hline rc llsty 85 tbheadsize "gray" 20
		list rc lsty lfs
			li tbl1 "sans" objcolor
			li "Image"
			li "Captioned image"
		elist
		rc+=lcolsize
		list rc lsty lfs "mono" kwcolor
			li tbl2"sans" objcolor
			li "image"
			li "cimage"
		elist
		rc+=12
		list rc lsty lfs "mono" argcolor
			li tbl3 "sans" objcolor
			li `"file" x y w h`
			li `"file" "caption" x y w h`
		elist
		textblock "If h = 0, w specifies the image width in terms of canvas width." rc 55 15 2

		rc+=30
		list rc lsty lfs "mono" optcolor
			li tbl4 "sans" objcolor
			li `scale "link"`
			li `scale "link" capsize`
		elist
		textblock "The scale value is a percentage from 1-100, and link is a URL. capsize is the text size of the caption" rc 55 15 2
	eslide

	// image
	slide bgcolor fgcolor
		ky=70
		cy=ky-10
		ly=cy-15
		lw=3
		image "images/follow.jpg" cx ky 640 480 40
		ctext "(x,y)" 80 68 ts "mono"
		circle cx ky coordsize accentcolor
		hline  cx ky 24 0.1 accentcolor
		ubrace cx 92 28 2 4
		ctext "w" cx 94 ts "mono"
		lbrace 30 70 30 2 2
		ctext "h" 28 68 ts "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext `image "file"`                    43 ly ts "mono" kwcolor
		ctext "x y w h"                  50 ly ts "mono" argcolor
		ctext "scale link"               65 ly ts "mono" optcolor
		
		image "images/follow.jpg" 20 25 640 480 10
		ctext `image "follow.jpg" 20 25 640 480 10` 20 ely ls "mono"

		image "images/follow.jpg" 75 25 640 480 30
		ctext `image "follow.jpg" 75 25 640 480 30` 75 ely ls "mono"
	eslide

	// cimage
	slide bgcolor fgcolor
		ky=70
		cy=ky-10
		ly=cy-15
		lw=3
		cimage "images/cloudy.jpg" "sky" cx ky 640 480 40 "" 1.5
		ctext "(x,y)" 80 68 ts "mono"
		circle cx ky coordsize accentcolor
		hline  cx ky 24 0.1 accentcolor
		ubrace cx 92 28 2 4
		ctext "w" cx 94 ts "mono"
		lbrace 30 70 30 2 2
		ctext "h" 28 68 ts "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext `cimage "file"`                    43 ly ts "mono" kwcolor
		ctext "x y w h"                  50 ly ts "mono" argcolor
		ctext "scale link"               65 ly ts "mono" optcolor
		
		cimage "images/cloudy.jpg" "sky" 20 25 640 480 10
		ctext `cimage "cloudy.jpg" "sky" 20 25 640 480 10` 20 exy ls "mono"

		cimage "images/cloudy.jpg" "sky" 75 25 640 480 30 "" 1.5
		ctext `cimage "cloudy.jpg" "sky" 75 25 640 480 30 "" 1.5` 75 exy ls "mono"
	eslide

	// List index
	slide bgcolor fgcolor
		rc=initlcol
		ctext "Lists" mid ty 5 "serif"
		hline rc llsty 85 tbheadsize "gray" 20
		list rc lsty lfs
			li tbl1 "sans" objcolor
			li "Plain list"
			li "Bullet list"
			li "Numbered list"
			li "Centered list"
		elist

		rc+=lcolsize
		list rc lsty lfs "mono" kwcolor
			li tbl2  "sans" objcolor
			li "list"
			li "blist"
			li "nlist"
			li "clist"
		elist

		rc+=lcolsize2
		list rc lsty lfs "mono" argcolor
			li tbl3 "sans" objcolor
			li "x y fontsize"
			li "x y fontsize"
			li "x y fontsize"
			li "x y fontsize"			
		elist
		rc+=18
		list rc lsty lfs "mono" optcolor
			li tbl4 "sans" objcolor
			li "font color op spacing"
			li "font color op spacing"
			li "font color op spacing"
			li "font color op spacing"
		elist
	eslide
	
	// list
	slide bgcolor fgcolor
		ky=70
		cy=ky-10
		ly=cy-15
		lw=3
		ix=40
		text "list x y fs" ix 85 4 "mono" objcolor
		text `   li "first"`  ix 78 4 "mono" objcolor
		text `   li "second"` ix 71 4 "mono" objcolor
		text `   li "third"`  ix 64 4 "mono" objcolor
		text "elist"          ix 57 4 "mono" objcolor
		hline 0 47 100 hlsize hlcolor hlop
		etext "list"                    29 ly ts "mono" kwcolor
		ctext "x y fontsize"            41 ly ts "mono" argcolor
		ctext "font color op spacing"   69 ly ts "mono" optcolor
		circle ix 85 coordsize accentcolor 50
		ctext "(x,y)" ix 80 lw "mono"
		textfile "code/plist-ex1.dsh" 3 30 ets "mono"
		include  "code/plist-ex1.dsh"
		textfile "code/plist-ex2.dsh" 40 30 ets "mono"
		include  "code/plist-ex2.dsh"
	eslide

	// blist
	slide bgcolor fgcolor
		ky=70
		cy=ky-10
		ly=cy-15
		lw=3
		ix=40
		text "blist x y fs" ix 85 4 "mono" objcolor
		text `   li "first"`  ix 78 4 "mono" objcolor
		text `   li "second"` ix 71 4 "mono" objcolor
		text `   li "third"`  ix 64 4 "mono" objcolor
		text "elist"          ix 57 4 "mono" objcolor
		hline 0 47 100 hlsize hlcolor hlop
		etext "blist"                    29 ly ts "mono" kwcolor
		ctext "x y fontsize"            41 ly ts "mono" argcolor
		ctext "font color op spacing"   69 ly ts "mono" optcolor

		circle ix 85 coordsize accentcolor coordop
		ctext "(x,y)" ix 80 lw "mono"
		textfile "code/blist-ex1.dsh" 3 30 ets "mono"
		include  "code/blist-ex1.dsh"
		textfile "code/blist-ex2.dsh" 40 30 ets "mono"
		include  "code/blist-ex2.dsh"
	eslide

	// nlist
	slide bgcolor fgcolor
		ky=70
		cy=ky-10
		ly=cy-15
		lw=3
		ix=40
		text "nlist x y fs" ix 85 4 "mono" objcolor
		text `   li "first"`  ix 78 4 "mono" objcolor
		text `   li "second"` ix 71 4 "mono" objcolor
		text `   li "third"`  ix 64 4 "mono" objcolor
		text "elist"          ix 57 4 "mono" objcolor
		hline 0 47 100 hlsize hlcolor hlop
		etext "nlist"                    29 ly ts "mono" kwcolor
		ctext "x y fontsize"            41 ly ts "mono" argcolor
		ctext "font color op spacing"   69 ly ts "mono" optcolor

		circle ix 85 coordsize accentcolor coordop
		ctext "(x,y)" ix 80 lw "mono"

		textfile "code/nlist-ex1.dsh" 3 30 ets "mono"
		include  "code/nlist-ex1.dsh"
		textfile "code/nlist-ex2.dsh" 40 30 ets "mono"
		include  "code/nlist-ex2.dsh"

	eslide

	// clist
	slide bgcolor fgcolor
		ky=70
		cy=ky-10
		ly=cy-15
		lw=3
		ix=40
		text "clist x y fs" ix 85 4 "mono" objcolor
		text `   li "first"`  ix 78 4 "mono" objcolor
		text `   li "second"` ix 71 4 "mono" objcolor
		text `   li "third"`  ix 64 4 "mono" objcolor
		text "elist"          ix 57 4 "mono" objcolor
		hline 0 47 100 hlsize hlcolor hlop
		etext "clist"                    29 ly ts "mono" kwcolor
		ctext "x y fontsize"            41 ly ts "mono" argcolor
		ctext "font color op spacing"   69 ly ts "mono" optcolor

		circle ix 85 coordsize accentcolor coordop
		ctext "(x,y)" ix 80 lw "mono"
		textfile "code/clist-ex1.dsh" 3 30 ets "mono"
		include  "code/clist-ex1.dsh"
		textfile "code/clist-ex2.dsh" 45 30 ets "mono"
		include  "code/clist-ex2.dsh"
	eslide

	// Arrow index
	slide bgcolor fgcolor
		rc=initlcol
		ctext "Arrows" mid ty 5 "serif"
		hline rc llsty 85 tbheadsize "gray" 20
		list rc lsty lfs
			li tbl1 "sans" objcolor
			li "Straight"
			li "Left curved"
			li "Right curved"
			li "Up curved"
			li "Down curved"
		elist
		rc+=lcolsize
		list rc lsty lfs "mono" kwcolor
			li tbl2 "sans" objcolor
			li "arrow"
			li "lcarrow"
			li "rcarrow"
			li "ucarrow"
			li "dcarrow"
		elist
		rc+=12
		list rc lsty lfs "mono" argcolor
			li tbl3 "sans" objcolor
			li "x1 y1 x2 y2"
			li "bx by cx cy ex ey"
			li "bx by cx cy ex ey"
			li "bx by cx cy ex ey"
			li "bx by cx cy ex ey"
		elist
		rc+=22
		list rc lsty lfs "mono" optcolor
			li tbl4 "sans" objcolor
			li "lw aw ah color op"
			li "lw aw ah color op"
			li "lw aw ah color op"
			li "lw aw ah color op"
			li "lw aw ah color op"
		elist
	eslide

	// arrow
	slide bgcolor fgcolor
		hline 0 47 100 hlsize hlcolor hlop
		etext "arrow"                  32 ly ts "mono" kwcolor
		ctext "x1 y1 x2 y2"            44 ly ts "mono" argcolor
		ctext "lw aw ah color op"      69 ly ts "mono" optcolor

		arrow  20 ky 80 ky lw 10 20  objcolor
		circle 20 ky lw accentcolor
		circle 80 ky lw accentcolor
		ctext "(x1,y1)" 20 cy ts "mono"
		ctext "(x2,y2)" 80 cy ts "mono"
		ctext "lw" 13 69 ts "mono"
		lbrace 16 70 lw 1 1
		rbrace 90 70 20 2 2
		ctext "ah" 92 70 lw "mono"
		ubrace 75 85 10 2 4
		ctext "aw" 75 87 lw "mono"

		arrow 10 20 30 20
		ctext "arrow 10 20 30 20" 20 ely ets "mono"

		arrow 40 20 60 30 0.5
		ctext "arrow 40 20 60 30 0.5" 50 ely ets "mono"

		arrow 70 20 95 30 1.5 6 6 accentcolor
		ctext `arrow 70 20 95 30 1.5 6 6 "maroon"` 82 ely ets "mono"
	eslide

	// lcarrow
	slide bgcolor fgcolor
		lw2=lw/2
		aw=lw*2
		ah=lw*2
		hline 0 47 100 hlsize hlcolor hlop
		etext "lcarrow"                  28 ly ts "mono" kwcolor
		ctext "bx by cx cy ex ey"        44 ly ts "mono" argcolor
		ctext "lw aw ah color op"        73 ly ts "mono" optcolor
		lcarrow 50 60 50 90 15 90 lw2 aw ah
		circle 50 60 coordsize accentcolor
		circle 50 90 coordsize accentcolor
		circle 15 90 coordsize accentcolor
		ctext "(bx,by)" 50 55 lw "mono"
		ctext "(cx,cy)" 50 85 lw "mono"
		ctext "(ex,ey)" 15 85 lw "mono"

		lcarrow 30 20 30 35 15 35
		text "lcarrow 30 20 30 35 15 35" 10 ely ets "mono"

		lcarrow 70 20 70 35 55 35 1 5 5 "maroon"
		text `lcarrow 70 20 70 35 55 35 1 5 5 "maroon"` 50 ely ets "mono"
	eslide

	// rcarrow
	slide bgcolor fgcolor
		hline 0 47 100 hlsize hlcolor hlop
		etext "rcarrow"                  28 ly ts "mono" kwcolor
		ctext "bx by cx cy ex ey"        44 ly ts "mono" argcolor
		ctext "lw aw ah color op"        73 ly ts "mono" optcolor
		rcarrow 50 60 50 90 85 90 lw2 aw ah
		circle 50 60 coordsize accentcolor
		circle 50 90 coordsize accentcolor
		circle 85 90 coordsize accentcolor
		ctext "(bx,by)" 50 55 lw "mono"
		ctext "(cx,cy)" 50 85 lw "mono"
		ctext "(ex,ey)" 85 85 lw "mono"

		rcarrow 15 20 15 35 30 35
		text "rcarrow 15 20 15 35 30 35" 10 ely ets "mono"

		rcarrow 50 20 50 35 70 35 1 5 5 "maroon"
		text `rcarrow 50 20 50 35 70 35 1 5 5 "maroon"` 50 ely ets "mono"
	eslide

	// ucarrow
	slide bgcolor fgcolor
		hline 0 47 100 hlsize hlcolor hlop
		etext "ucarrow"                  28 ly ts "mono" kwcolor
		ctext "bx by cx cy ex ey"        44 ly ts "mono" argcolor
		ctext "lw aw ah color op"        73 ly ts "mono" optcolor
		ucarrow 50 60 80 60 80 90 lw2 aw ah
		circle 50 60 coordsize accentcolor
		circle 80 60 coordsize accentcolor
		circle 80 90 coordsize accentcolor
		ctext "(bx,by)" 50 55 lw "mono"
		ctext "(cx,cy)" 80 55 lw "mono"
		ctext "(ex,ey)" 80 92 lw "mono"

		ucarrow 15 20 30 20 30 35
		text "ucarrow 15 20 30 20 30 35" 10 ely ets "mono"

		ucarrow 50 20 70 20 70 35 1 5 5 "maroon"
		text `rcarrow 50 20 70 20 70 35 1 5 5 "maroon"` 50 ely ets "mono"
	eslide

	// dcarrow
	slide bgcolor fgcolor
		hline 0 47 100 hlsize hlcolor hlop
		etext "dcarrow"                  28 ly ts "mono" kwcolor
		ctext "bx by cx cy ex ey"        44 ly ts "mono" argcolor
		ctext "lw aw ah color op"        73 ly ts "mono" optcolor
		dcarrow 50 90 80 90 80 60 lw2 aw ah
		circle  50 90 coordsize accentcolor
		circle  80 90 coordsize accentcolor
		circle  80 60 coordsize accentcolor
		ctext "(bx,by)" 50 92 lw "mono"
		ctext "(cx,cy)" 80 92 lw "mono"
		ctext "(ex,ey)" 80 55 lw "mono"

		dcarrow 15 35 30 35 30 20
		text "dcarrow 15 35 30 30 20" 10 ely ets "mono"

		dcarrow 50 35 70 35 70 20 1 5 5 "maroon"
		text `dcarrow 50 35 70 35 70 20 1 5 5 "maroon"` 50 ely ets "mono"
	eslide

	// Brace index
	slide bgcolor fgcolor
		rc=initlcol
		ctext "Braces and Brackets" mid ty 5 "serif"
		hline rc llsty 85 tbheadsize "gray" 20
		list rc lsty lfs
			li tbl1 "sans" objcolor
			li "Left brace"
			li "Right brace"
			li "Up brace"
			li "Down brace"
			li "Left bracket"
			li "Right bracket"
			li "Up bracket"
			li "Down bracket"
		elist
		rc+=lcolsize
		list rc lsty lfs "mono" kwcolor
			li tbl2 "sans" objcolor
			li "lbrace"
			li "rbrace"
			li "ubrace"
			li "dbrace"
			li "lbracket"
			li "rbracket"
			li "ubracket"
			li "dbracket"
		elist
		rc+=12
		list rc lsty lfs "mono" argcolor
			li tbl3 "sans" objcolor
			li "x y height bw bh"
			li "x y height bw bh"
			li "x y width bw bh"
			li "x y width bw bh"
			li "x y width height"		
			li "x y width height"		
			li "x y width height"		
			li "x y width height"		
		elist
		rc+=25
		list rc lsty lfs "mono" objcolor
			li tbl4 "sans" objcolor
			li "lw color op"
			li "lw color op"
			li "lw color op"
			li "lw color op"
			li "lw color op"
			li "lw color op"
			li "lw color op"
			li "lw color op"
		elist
	eslide

	// lbrace
	slide bgcolor fgcolor
		brh=35
		cx=50
		hline 0 47 100 hlsize hlcolor hlop
		etext "lbrace"             28 ly ts "mono" kwcolor
		ctext "x y height bw bh" 44 ly ts "mono" argcolor
		ctext "lw color op"        70 ly ts "mono" optcolor
		lbrace cx 75 brh 6 6 0.75
		circle cx 75 coordsize accentcolor
		ctext "(x,y)" 45 75 lw "mono"
		ctext "bw" 55 94 lw "mono"
		ctext "bh" cx 90 lw "mono"
		rbrace 65 75 brh 2 2
		ctext "height" 70 74 lw "mono"

		lbrace 20 25 20 2 2
		ctext "lbrace 20 25 20 2 2" 20 ely ets "mono"

		lbrace 50 25 20 4 4 1
		ctext "lbrace 50 25 20 4 4 1" 50 ely ets "mono"

		lbrace 80 25 20 6 3 1 "maroon"
		ctext `lbrace 80 25 20 6 3 1 "maroon"` 80 ely ets "mono"
	eslide

	// rbrace
	slide bgcolor fgcolor
		brh=35
		cx=50
		hline 0 47 100 hlsize hlcolor hlop
		etext "rbrace"             28 ly ts "mono" kwcolor
		ctext "x y height bw bh" 44 ly ts "mono" argcolor
		ctext "lw color op"        70 ly ts "mono" optcolor
		rbrace cx 75 brh 6 6 0.75
		circle cx 75 coordsize accentcolor
		ctext "(x,y)" 55 75 lw "mono"
		ctext "bw" 45 94 lw "mono"
		ctext "bh" cx 90 lw "mono"
		rbrace 65 75 brh 2 2
		ctext "height" 70 74 lw "mono"

		rbrace 20 25 20 2 2
		ctext "rbrace 20 25 20 2 2" 20 ely ets "mono"

		rbrace 50 25 20 4 4 1
		ctext "rbrace 50 25 20 4 4 1" 50 ely ets "mono"

		rbrace 80 25 20 6 3 1 "maroon"
		ctext `rbrace 80 25 20 6 3 1 "maroon"` 80 ely ets "mono"
	eslide

	// ubrace
	slide bgcolor fgcolor
		brw=35
		cx=50
		hline 0 47 100 hlsize hlcolor hlop
		etext "ubrace"             28 ly ts "mono" kwcolor
		ctext "x y width bw bh" 44 ly ts "mono" argcolor
		ctext "lw color op"        70 ly ts "mono" optcolor
		ubrace cx 75 brw 6 12 0.75
		circle cx 75 coordsize accentcolor
		ubrace cx 85 brw 1 4
		ctext "(x,y)" cx 77 lw "mono"
		ctext "bw" 35 70 lw "mono"
		ctext "bh" 30 65 lw "mono"
		ctext "width" cx 86 lw "mono"

		ubrace 20 25 20 2 4
		ctext "ubrace 20 25 20 2 4" 20 ely ets "mono"

		ubrace 50 25 20 4 8 1
		ctext "ubrace 50 25 20 4 8 1" 50 ely ets "mono"

		ubrace 80 25 20 4 8 1 "maroon"
		ctext `ubrace 80 25 20 4 8 1 "maroon"` 80 ely ets "mono"
	eslide

	// dbrace
	slide bgcolor fgcolor
		brw=35
		cx=50
		hline 0 47 100 hlsize hlcolor hlop
		etext "dbrace"             28 ly ts "mono" kwcolor
		ctext "x y width bw bh" 44 ly ts "mono" argcolor
		ctext "lw color op"        70 ly ts "mono" optcolor
		dbrace cx 60 brw 6 12 0.75
		circle cx 60 coordsize accentcolor
		ubrace cx 85 brw 1 4
		ctext "(x,y)" cx 55 lw "mono"
		ctext "bw" 35 63 lw "mono"
		ctext "bh" 30 67 lw "mono"
		ctext "width" cx 86 lw "mono"

		dbrace 20 25 20 2 4
		ctext "dbrace 20 25 20 2 4" 20 ely ets "mono"

		dbrace 50 25 20 4 8 1
		ctext "dbrace 50 25 20 4 8 1" 50 ely ets "mono"

		dbrace 80 25 20 4 8 1 "maroon"
		ctext `dbrace 80 25 20 4 8 1 "maroon"` 80 ely ets "mono"
	eslide

	// lbracket
	slide bgcolor fgcolor
		brh=35
		cx=50
		hline 0 47 100 hlsize hlcolor hlop
		etext "lbracket"             28 ly ts "mono" kwcolor
		ctext "x y width height"     44 ly ts "mono" argcolor
		ctext "lw color op"          70 ly ts "mono" optcolor
		lbracket cx 75 6 brh 0.2
		circle cx 75 coordsize accentcolor
		ctext "(x,y)" 45 75 lw "mono"
		ctext "width" 55 94 lw "mono"
		rbrace 65 75 brh 2 2
		ctext "height" 70 74 lw "mono"

		lbracket 20 25 2 20 
		ctext "lbrace 20 25 2 20" 20 ely ets "mono"

		lbracket 50 25 4 20 1
		ctext "lbracket 50 25 4 20 1" 50 ely ets "mono"

		lbracket 80 25 6 20 1 "maroon"
		ctext `lbracket 80 25 6 20 1 "maroon"` 80 ely ets "mono"
	eslide

	// rbracket
	slide bgcolor fgcolor
		brh=35
		cx=50
		hline 0 47 100 hlsize hlcolor hlop
		etext "rbracket"             28 ly ts "mono" kwcolor
		ctext "x y width height"     44 ly ts "mono" argcolor
		ctext "lw color op"          70 ly ts "mono" optcolor
		rbracket cx 75 6 brh 0.2
		circle cx 75 coordsize accentcolor
		text "(x,y)" 52 75 lw "mono"
		ctext "width" 45 94 lw "mono"
		rbrace 65 75 brh 2 2
		ctext "height" 70 74 lw "mono"

		rbracket 20 25 2 20 
		ctext "lbrace 20 25 2 20" 20 ely ets "mono"

		rbracket 50 25 4 20 1
		ctext "rbracket 50 25 4 20 1" 50 ely ets "mono"

		rbracket 80 25 6 20 1 "maroon"
		ctext `rbracket 80 25 6 20 1 "maroon"` 80 ely ets "mono"
	eslide

	// ubracket
	slide bgcolor fgcolor
		brw=35
		cx=50
		hline 0 47 100 hlsize hlcolor hlop
		etext "ubracket"             28 ly ts "mono" kwcolor
		ctext "x y width height" 44 ly ts "mono" argcolor
		ctext "lw color op"        70 ly ts "mono" optcolor
		ubracket cx 75 brw 6 0.2
		circle cx 75 coordsize accentcolor
		ubrace cx 85 brw 1 4
		ctext "(x,y)" cx 77 lw "mono"
		etext "height" 30 69 lw "mono"
		ctext "width" cx 86 lw "mono"

		ubracket 20 25 20 4
		ctext "ubracket 20 25 20 4" 20 ely ets "mono"

		ubracket 50 25 20 4 0.3
		ctext "ubracket 50 25 20 4 0.3" 50 ely ets "mono"

		ubracket 80 25 20 4 1 "maroon"
		ctext `ubracket 80 25 20 4 1 "maroon"` 80 ely ets "mono"
	eslide

	// dbracket
	slide bgcolor fgcolor
		brw=35
		cx=50
		hline 0 47 100 hlsize hlcolor hlop
		etext "dbracket"             28 ly ts "mono" kwcolor
		ctext "x y width height" 44 ly ts "mono" argcolor
		ctext "lw color op"        70 ly ts "mono" optcolor
		dbracket cx 75 brw 6 0.2
		circle cx 75 coordsize accentcolor
		ubrace cx 95 brw 1 4
		ctext "(x,y)" cx 70 lw "mono"
		etext "height" 30 79 lw "mono"
		ctext "width" cx 96 lw "mono"

		dbracket 20 25 20 4
		ctext "dbracket 20 25 20 4" 20 ely ets "mono"

		dbracket 50 25 20 4 0.3
		ctext "dbracket 50 25 20 4 0.3" 50 ely ets "mono"

		dbracket 80 25 20 4 1 "maroon"
		ctext `dbracket 80 25 20 4 1 "maroon"` 80 ely ets "mono"
	eslide

	// assignments and data index
	slide bgcolor fgcolor
		rc=initlcol
		listspacing=1.5
		ctext "Loop, If, Built-ins" mid ty 5 "serif"
		hline rc llsty 85 tbheadsize "gray" 20
		list rc lsty lfs "sans" "" 100 listspacing
			li tbl1 "sans" objcolor
			li "Loop"
			li "Conditional"
			li "Polar coordinate (x)"
			li "Polar coordinate (y)"
			li "Polar coordinates"
			li "Area"
			li "Formatted text"
			li "Substring"
			li "Random number"
			li "Value mapping"
			li "Define function"
			li "Import function"
			li "In-line data"
			li "Objects on a grid"
			li "Rulers"
		elist
		rc+=lcolsize
		list rc lsty lfs "mono" kwcolor 100 listspacing
			li tbl2 "sans" objcolor
			li "for v="
			li "if"
			li "x=polarx"
			li "y=polary"
			li "value=polar"
			li "value=area"
			li "value=format"
			li "value=substr"
			li "value=random"
			li "value=vmap"
			li "def"
			li "import"
			li "data" 
			li "grid"
			li "ruler"
		elist
		rc+=20
		list rc lsty lfs "mono" argcolor 100 listspacing
			li tbl3 "sans" objcolor
			li "begin end [increment] ... efor"
			li "condition ... [else] ... eif"
			li "x y radius angle"
			li "x y radius angle"
			li "x y radius angle"
			li "expression"
			li "fmt expression or up to 5 args"
			li "string begin end"
			li "min max"
			li "data min1 max1 min2 max2"
			li "name arg1 ... argn ... edef"
			li `"file"`
			li `"file" ... edata`
			li `"file" x y hspace vspace edge`
			li "increment [color]"
		elist
	eslide

	// for loop
	slide bgcolor fgcolor
		list 25 85 4 "mono" objcolor 100 1.3
			li "for v=begin end [increment]"
			li "...items to repeat using v" "mono" 
			li "efor"
		elist
		
		hline 0 47 100 hlsize hlcolor hlop
		ctext "for"  25 ly ts "mono" kwcolor
		etext  "v="  32 ly ts "mono"
		text   "begin end" 32 ly ts "mono" argcolor
		text   "increment" 48 ly ts "mono" optcolor
		text   "...efor"   64 ly ts "mono" argcolor
		textfile "code/objloop.dsh" 10 30 ets "mono"
		include "code/objloop.dsh"
	eslide

	slide bgcolor fgcolor
		list 25 88 4 "mono" objcolor 100 1.3
			li "if condition"
			li "...statements when true"
			li "else"
			li "...statements when false"
			li "eif"
		elist

		rbrace 80 70 12 2 2 0.1 "black"
		textblock "else block may be omitted" 81 71 10 2.5

		hline 0 47 100 hlsize hlcolor hlop
		ctext "if"  25 ly ts "mono" kwcolor
		text  "condition" 28 ly ts "mono"
		text  "..."       44 ly ts "mono" argcolor
		text  "else ..."  50 ly ts "mono" optcolor
		text  "eif"       64 ly ts "mono" kwcolor 


		ely=ly-10
		list 5 ely 2 "mono" "" 100 1.2
			li "Condition"
			li "if a == b"
			li "if a != b"
			li "if a > b"
			li "if a < b"
			li "if a >= b"
			li "if a <= b"
			li "if a >< b c"
		elist

		list 18 ely 2 "sans" hlcolor 100 1.2
			li "Description"
			li "if a equals b"
			li "if a not equal to b"
			li "if a less than b"
			li "if a greater than b"
			li "if a greater than or equal to b"
			li "if a less than or equal to b"
			li "if a is between b and c"
		elist

		vline 10 8 26 12 "gray" 10
		vline 35 8 26 36 hlcolor 10

		textfile "code/objif.dsh" 60 ely ets "mono"
		include  "code/objif.dsh"

	eslide

	// polarx, polary
	slide bgcolor fgcolor
		ly1=ly+3.2
		ly2=ly-2
		pcx=40
		pcy=65
		rad=25
		theta=45
		circle pcx pcy coordsize accentcolor
		ctext "(x,y)" 40 60 lw "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "px=" 35 ly1 ts "mono"
		etext "py=" 35 ly2 ts "mono"
		text  "polarx" 35 ly1 ts "mono" kwcolor
		text  "polary" 35 ly2 ts "mono" kwcolor 
		text  "x y radius theta" 46 ly1 ts "mono" argcolor
		text  "x y radius theta" 46 ly2 ts "mono" argcolor

		px=polarx pcx pcy rad theta
		py=polary pcx pcy rad theta
		lpx=px+2
		text "(px,py)" lpx py lw "mono"
		text "theta" 47 67 lw "mono"
		etext "radius" 45 75 lw "mono"
		line pcx pcy px py 0.5
		line pcx pcy 60 pcy 0.5
		arc pcx pcy 10 8 0 45 
		circle px py coordsize accentcolor

		include  "code/p1.dsh"
		textfile "code/p1.dsh" 10 35 2 "mono"
	eslide

	// polar
	slide bgcolor fgcolor
		pcx=40
		pcy=65
		rad=25
		theta=45
		circle pcx pcy coordsize accentcolor
		ctext "(x,y)" 40 60 lw "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "p=" 35 ly ts "mono"
		text  "polar" 35 ly ts "mono" kwcolor
		text  "x y radius theta" 44 ly ts "mono" argcolor

		p=polar pcx pcy rad theta
		lpx=p_x+2
		text "(p_x,p_y)" lpx p_y lw "mono"
		text "theta" 47 67 lw "mono"
		etext "radius" 45 75 lw "mono"
		line pcx pcy p_x p_y 0.5
		line pcx pcy 60 pcy 0.5
		arc pcx pcy 10 8 0 45 
		circle p_x p_y coordsize accentcolor

		include  "code/p0.dsh"
		textfile "code/p0.dsh" 10 35 2 "mono"
	eslide

	// area
	slide bgcolor fgcolor
		list 35 80 4 "mono"  objcolor 100 1.3
			li "v=123.45"
			li "a=area v"
		elist
		arrow 35 65 35 70 0.3 1 3
		ctext "area" 35 60 lw "mono"

		arrow 50 65 50 70 0.3 1 3
		text "original value" 50 60 lw "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "value=" 40 ly ts "mono"
		text  "area" 40 ly ts "mono" kwcolor
		text  "expression" 48 ly ts "mono" argcolor
		textfile "code/area.dsh" 20 30 2 "mono"
		include  "code/area.dsh"
	eslide

	// format
	slide bgcolor fgcolor
		list 25 90 4 "mono" objcolor 100 1.3
			li "x=3.14159"
			li "y=2.0"
			li `title=format "Value=%.2f"   x*y`
		elist
		hline 0 47 100 hlsize hlcolor hlop
		etext "value=" 30 ly ts "mono"
		text  "format" 30 ly ts "mono" kwcolor
		text  "fmt expression or up to 5 args" 41 ly ts "mono" argcolor
		ctext "format string" 62.5 65 lw "mono"
		dbrace 62.5 70 22 1 2
		ctext "expression" 85 65 lw "mono"
		dbrace 80 70 8 1 2
		ctext "Value=6.28" 30 65 lw "mono"
		dbrace 30 70 9 1 2
		textfile "code/fmt.dsh" 5 37 2 "mono"
		include  "code/fmt.dsh"
	eslide

	// substr
	slide bgcolor fgcolor
		list 35 80 4 "mono" objcolor 100 1.3
			li `s="hello, world"`
			li "h=substr s 3 8"
		elist
		arrow 35 65 35 70 0.3 1 3
		ctext `"lo, wo"` 35 60 lw "mono"
		arrow 58 65 58 70 0.3 1 3
		etext "begin"  58 60 lw "mono"
		arrow 62 65 62 70 0.3 1 3
		text "end"     62 60 lw "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "value=" 40 ly ts "mono"
		text  "substr" 40 ly ts "mono" kwcolor
		text  "string begin end" 51 ly ts "mono" argcolor
		textfile "code/substr.dsh" 10 35 2 "mono"
		include  "code/substr.dsh"
	eslide


	// random
	slide bgcolor fgcolor
		hline 0 47 100 hlsize hlcolor hlop
		rmin=10
		rmax=90
		rlen=rmax-rmin
		ryy=75
		rly=ryy-5
		rvly=ryy+5
		exx=random rmin rmax
		circle rmin ryy 2 objcolor
		hline  rmin ryy rlen 2 objcolor 30
		etext "value=" 45 ly ts "mono"
		text "random"  45 ly ts "mono" kwcolor
		text "min max" 56 ly ts "mono" argcolor
		circle rmax ryy 2 objcolor
		circle exx ryy 3 accentcolor
		ctext "min"  10 rly lw "mono"
		ctext "max"  90 rly lw "mono"
		ctext "value" exx rvly lw "mono"

		rx1=random 5 30
		ry1=random 25 35
		circle rx1 ry1 3 accentcolor
		list 5 15 2 "mono" "" 100 1.3
			li "rx1=random 5 30"
			li "ry1=random 15 35"
			li `circle rx1 ry1 3 "maroon"`
		elist

		rx2=random 40 60
		ry2=random 25 35
		circle rx2 ry2 3 "green"
		list 40 15 2 "mono" "" 100 1.3
			li "rx2=random 40 60"
			li "ry2=random 15 35"
			li `circle rx2 ry2 3 "green"`
		elist

		rx3=random 75 95
		ry3=random 25 35
		circle rx3 ry3 3 "blue"
		list 75 15 2 "mono" "" 100 1.3
			li "rx1=random 75 95"
			li "ry1=random 15 35"
			li `circle rx3 ry3 3 "blue"`
		elist
	eslide

	// vmap
	slide bgcolor fgcolor
		vmy1=90
		vmy2=vmy1-20
		vmly1=vmy1-6
		vmly2=vmy2-6

		polygon "35 10 90 65" "vmy1 vmy2 vmy2 vmy1" objcolor 15
		circle 35 vmy1 2 accentcolor
		hline  35 vmy1 30 2 accentcolor 20
		circle 65 vmy1 2 accentcolor
		circle 50 vmy1 2
		ctext "min1" 35 vmly1 lw "mono" accentcolor
		ctext "max1" 65 vmly1 lw "mono" accentcolor
		ctext "data" 50 vmly1 lw "mono"

		circle 10 vmy2 2 "blue"
		hline  10 vmy2 80 2 "blue" 20
		circle 90 vmy2 2 "blue"
		circle 50 vmy2 2
		ctext "min2"  10 vmly2 lw "mono" "blue"
		ctext "max2"  90 vmly2 lw "mono" "blue"
		ctext "value" 50 vmly2 lw "mono"
		hline 0 47 100 hlsize hlcolor hlop
		etext "value=" 30 ly ts "mono"
		text "vmap"    30 ly ts "mono" kwcolor
		text "data min1 max1 min2 max2" 38 ly ts "mono" argcolor

		include "code/vmap-example.dsh"
		textfile "code/vmap-example.dsh" 10 37 2 "mono"
	eslide

	// func
	slide bgcolor fgcolor
		filew=40
		filey=80
		lfilex=10
		fileary=filey-5
		rfilex=lfilex+50
		lfileax=lfilex+36
		rfileax=lfileax+12
		ctext `import "doit.dsh"` 50 92 4 "mono" objcolor
		textcode "code/func-ex.dsh"   lfilex filey filew 2 argcolor
		textcode "code/func-ex1.dsh"  rfilex filey filew 2 accentcolor
		text `contents of "doit.dsh"`      lfilex 85 2 "mono"
		text `doit 50 20 2.5 "hello"`        rfilex 85 2 "mono"
		arrow lfileax fileary rfileax fileary 0.5 2 3
		hline 0 47 100 hlsize hlcolor hlop
		etext "import" 49 ly ts "mono" kwcolor
		text `"file"` 51 ly ts "mono" argcolor
		func "code/func-ex.dsh" 50 30 5 "calling the function"
		func "code/func-ex.dsh" 50 20 4 "call again"
		list 30 10 2 "mono" "" 100 1.2
			li `doit 50 30 5 "calling the function"`
			li `doit 50 20 4 "call again"`
		elist
	eslide

	// data
	slide bgcolor fgcolor
		list 25 90 4 "mono" objcolor 100 1.3
			li `data "file.d"`
			li "first 20"
			li "second 100"
			li "third 200"
			li "edata"
		elist
		arrow 61 91 52 91 0.2 2 3
		text "data file"   62 90 lw "mono"
		text "data values" 50 75 lw "mono"
		rbrace 48 75 22 2 2
		hline 0 47 100 hlsize hlcolor hlop
		etext "data" 35 ly ts "mono" kwcolor
		ctext `"file" ...` 45 ly ts "mono" argcolor
		text "edata" 55 ly ts "mono" kwcolor
		textfile  "code/data-example.dsh" 25 35 2 "mono"
		include   "code/data-example.dsh"
	eslide

	// grid
	slide bgcolor fgcolor
		textcode "code/grid-ex0.dsh" 10 80 16 2 objcolor
		grid "code/grid-ex0.dsh"     35 80 15 15 70
		hline 0 47 100 hlsize hlcolor hlop
		etext "grid" 30 ly ts "mono" kwcolor
		ctext `"file" x y hspace vspace limit` 55 ly ts "mono" argcolor
		ctext "(x,y)" 35 83 lw "mono"
		rbrace 75 72 15 2 2
		text "vspace" 76 72 lw "mono"
		ubrace 42.5 90 15 2 4
		ctext "hspace" 42.5 91 lw "mono"
		vline 70 55 34 1 kwcolor 20
		ctext "limit" 70 90 lw "mono"
		ctext "file" 15 90 lw "mono"
		arrow 15 88 15 85 0.3 2 2 

		grid     "code/grid-ex1.dsh" 35 33 10 10 65
		textfile "code/grid-ex1.dsh" 10 35 2 "mono"
		ctext     `grid "code/grid-ex.dsh" 35 33 10 10 65` 50 10 ets  "mono"
	eslide

	// ruler
	slide bgcolor fgcolor
		etext "increment" 39 80 ts "mono"
		etext  "(default = 5)" 39 77 1.4 "mono"
		lbrace 40 80 10 2 2 0.3
		image "images/rule-incr.png"  50 80 30 0
		hline 0 47 100 hlsize hlcolor hlop
		text "ruler"      33  ly ts "mono" kwcolor
		ctext "increment" 50  ly ts "mono" optcolor
		text "color"      60 ly ts "mono" optcolor

		ctext "ruler"            15 10 ets "mono"
		ctext "ruler 10"         50 10 ets "mono"
		ctext `ruler 2 "red"` 85 10 ets "mono"

		image "images/rule.png"       15 25 20 0
		image "images/rule-10.png"    50 25 20 0
		image "images/rule-red.png"   85 25 20 0
	eslide


	// Math Index
	slide bgcolor fgcolor
		rc=initlcol
		listspacing=1.5
		ctext "Math Functions" mid ty 5 "serif"
		hline rc llsty 85 tbheadsize "gray" 20
		list rc lsty lfs "sans" "" 100 listspacing
			li tbl1 "sans" objcolor
			li "Cosine"
			li "Sine"
			li "Square Root"
			li "Tangent"
		elist
		rc+=lcolsize
		list rc lsty lfs "mono" kwcolor 100 listspacing
			li tbl2 "sans" objcolor
			li "cosine"
			li "sine"
			li "sqrt"
			li "tangent"
		elist
		rc+=20
		list rc lsty lfs "mono" argcolor 100 listspacing
			li tbl3 "sans" objcolor
			li "number or expression"
			li "number or expression"
			li "number or expression"
			li "number or expression"
		elist		
	eslide

	// Cosine
	slide bgcolor fgcolor
		list 35 90 4 "mono" objcolor 100 1.3
			li "a=3.14159265359"
			li "b=2*a"
			li "x=cosine 4"
			li "y=cosine a"
			li "n=cosine a+b"
		elist

		text "x = -1"       72 75 lw "mono"
		text "y = -0.65364" 72 67 lw "mono"
		text "n = -1"       72 59 lw "mono"
		arrow 70 76 60 76 0.2 2 3
		arrow 70 68 60 68 0.2 2 3
		arrow 70 60 60 60 0.2 2 3
		hline 0 47 100 hlsize hlcolor hlop
		etext "value=" 30 ly ts "mono"
		text "cosine"    30 ly ts "mono" kwcolor
		text "number or expression" 43 ly ts "mono" argcolor
	eslide

	// Sine
	slide bgcolor fgcolor
		list 35 90 4 "mono" objcolor 100 1.3
			li "a=10"
			li "b=71"
			li "x=sin 4"
			li "y=sin a"
			li "n=sin a+b"
		elist

		text "x = -0.75680" 72 75 lw "mono"
		text "y = -0.5440"  72 67 lw "mono"
		text "n = -0.62989" 72 59 lw "mono"
		arrow 70 76 60 76 0.2 2 3
		arrow 70 68 60 68 0.2 2 3
		arrow 70 60 60 60 0.2 2 3
		hline 0 47 100 hlsize hlcolor hlop
		etext "value=" 35 ly ts "mono"
		text "sine"    35 ly ts "mono" kwcolor
		text "number or expression" 43 ly ts "mono" argcolor
	eslide


	// Square root
	slide bgcolor fgcolor
		list 35 90 4 "mono" objcolor 100 1.3
			li "a=10"
			li "b=71"
			li "x=sqrt 4"
			li "y=sqrt a"
			li "n=sqrt a+b"
		elist

		text "x = 2"          72 75 lw "mono"
		text "y = 3.1622776"  72 67 lw "mono"
		text "n = 9"          72 59 lw "mono"
		arrow 70 76 60 76 0.2 2 3
		arrow 70 68 60 68 0.2 2 3
		arrow 70 60 60 60 0.2 2 3
		hline 0 47 100 hlsize hlcolor hlop
		etext "value=" 35 ly ts "mono"
		text "sqrt"    35 ly ts "mono" kwcolor
		text "number or expression" 43 ly ts "mono" argcolor

		textfile "code/sqrt-ex.dsh" 35 35 2 "mono"
		include  "code/sqrt-ex.dsh"
	eslide


	// Tangent
	slide bgcolor fgcolor
		list 35 90 4 "mono" objcolor 100 1.3
			li "a=10"
			li "b=71"
			li "x=tangent 4"
			li "y=tangent a"
			li "n=tangent a+b"
		elist

		text "x = 1.1578213"          72 75 lw "mono"
		text "y = 0.6483608"          72 67 lw "mono"
		text "n = -0.8109944"         72 59 lw "mono"
		arrow 70 76 62 76 0.2 2 3
		arrow 70 68 62 68 0.2 2 3
		arrow 70 60 62 60 0.2 2 3
		hline 0 47 100 hlsize hlcolor hlop
		etext "value=" 30 ly ts "mono"
		text "tangent"    30 ly ts "mono" kwcolor
		text "number or expression" 43 ly ts "mono" argcolor
	eslide

	// charts index
	slide bgcolor fgcolor
		ctext "Charts" mid ty 5 "serif"
		rc=initlcol
		listspacing=1.6
		hline rc llsty 85 tbheadsize "gray" 20
		list rc lsty lfs "sans" "" 100 listspacing
			li tbl1 "sans" objcolor
			li "Charts"
			li "Chart Legends"
		elist
		rc+=lcolsize
		list rc lsty lfs "mono" kwcolor 100 listspacing
			li tbl2 "sans" objcolor
			li "dchart"
			li "legend"
		elist
		rc+=lcolsize
		list rc lsty lfs "mono" argcolor 100 listspacing
			li "arguments" "sans" objcolor
			li `options "file" (see next page)`
			li `"text" x y size font color`
		elist
	eslide

	// dchart
	include "dchart-chtypes.dsh"
	include "dchart-types.dsh"
	include "dchart-elements.dsh"
	include "dchart-measures.dsh"
	include "dchart-pos.dsh"

	ts=3.2
	slide bgcolor fgcolor
		dchart -bar  -yaxis -left 35 -bottom 65 -top 90 -right 65 "test.d"
		hline 0 47 100 hlsize hlcolor hlop
		text "dchart" 32 ly ts "mono" kwcolor
		text `options "file"` 43 ly ts "mono" argcolor

		ctext "-bar"        50 70 lw "mono"
		ctext "-yaxis"      32 55 lw "mono"
		etext "-left=35"    25 80 lw "mono"
		ctext "-top=90"     50 95 lw "mono"
		ctext "-bottom=65"  50 55 lw "mono"
		text  "-right=65"   75 80 lw "mono"

		arrow 32 58 32 65 0.3 2 2 objcolor // yaxis
		arrow 50 94 50 90 0.3 2 2 objcolor // top
		arrow 75 82 65 82 0.3 2 2 objcolor // right 
		arrow 25 82 35 82 0.3 2 2 objcolor // left
		arrow 50 58 50 65 0.3 2 2 objcolor // bottom
		vline 35 65 25 0.1 objcolor 50
		vline 65 65 25 0.1 objcolor 50
		hline 35 90 30 0.1 objcolor 50
		hline 35 65 30 0.1 objcolor 50

		etss=ets*0.75
		include "code/dchart-ex1.dsh"
		textfile "code/dchart-ex1.dsh" 3 10 etss "mono"

		include "code/dchart-ex2.dsh"
		textfile "code/dchart-ex2.dsh" 50 10 etss "mono"
	eslide

	// legend
	slide bgcolor fgcolor
		hline 0 47 100 hlsize hlcolor hlop
		text "legend" 25 ly ts "mono" kwcolor
		text "x y fontsize font color" 37 ly ts "mono" argcolor
		legend "My text" 40 70 10 "sans" objcolor
		circle 40 70 3 accentcolor
		ctext "(x,y)" 40 65 lw "mono"
		
		legend "Item on the chart" 20 30 3 "sans" "red"
		text `legend "Item on the chart" 20 30 3 "sans" "red"` 3 10 ets "mono"

		legend "Thing" 70 30 2 "serif" "blue"
		text `legend "Thing" 70 30 2 "serif" "blue"`  60 10 ets "mono"
	eslide

	// Map (Geo) index
	slide bgcolor fgcolor
		initlcol-=4
		rc=initlcol
		lfs-=0.25
		ctext "Geographic Functions" mid ty 5 "serif"
		hline rc llsty 95 tbheadsize "gray" 20
		list rc lsty lfs
			li tbl1 "sans" objcolor
			li "Regions"
			li "Borders"
			li "Text labels"
			li "Dot markers"
			li "Text with markers"
			li "Place images"
			li "Lines between points"
			li "Arcs between points"
			li "Lines between points"
		elist
		rc+=20
		list rc lsty lfs "mono" kwcolor
			li tbl2 "sans" objcolor
			li "georegion"
			li "geoborder"
			li "geolabel"
			li "geomark"
			li "geoloc"
			li "geoimage"
			li "geopath"
			li "geoarc"
			li "geopathfile"
		elist
		rc+=13
		list rc lsty lfs "mono" argcolor
			li tbl3 "sans" objcolor
			li `"file.kml" ltmin ltmax lgmin lgmax`
			li `"file.kml" ltmin ltmax lgmin lgmax`
			li `"loc" ltmin ltmax lgmin lgmax`
			li `"loc" ltmin ltmax lgmin lgmax`
			li `"loc" ltmin ltmax lgmin lgmax`
			li `"loc" ltmin ltmax lgmin lgmax w h`
			li `"p1" "p2" ltmin ltmax lgmin lgmax`
			li `"p1" "p2" ltmin ltmax lgmin lgmax`
			li `"file" ltmin ltmax lgmin lgmax`
		elist
		rc+=38
		list rc lsty lfs "mono" objcolor
			li tbl4 "sans" objcolor
			li "color op"
			li "lw color op"
			li "size font color op"
			li "size color op"
			li "align size font color op"
			li
			li "lw color op"
			li "lw color op"
			li "lw color op"
		elist
		
		ny=lsty-65
		text `"file.kml" are KML files from opendatasoft` initlcol ny 1.8 "sans" "" 100 "https://public.opendatasoft.com/explore/dataset/world-administrative-boundaries/export/"
		ny+=1
		hline initlcol ny 30 2 "steelblue" 20
		ny-=4
		list initlcol ny 1.8 "sans" "" 100 1.5
			li `ltmin, ltmax, lgmin, lgmax are latitude and longitude boundaries`
			li `"loc" refers to a geo URI string ("geo:lat,long"), or a filename containing multiple locations`
			li `"p1" and "p2" are geo URIs`
		elist
	eslide

	kwx=6
	arx=kwx+16
	arx2=arx+57
	slide bgcolor fgcolor
		image "images/georegion.png" 50 75 45 0
		ctext "ltmax" 50   95 ts "mono"
		ctext "ltmin" 50   53 ts "mono"
		ctext "lgmax" 76   75 ts "mono"
		etext "lgmin" 27.5 75 ts "mono"
		text  "color" 10 65 ts
		line 17 66 43 66 0.2
		circle 43 66 1

		hline 0 47 100 hlsize hlcolor hlop
		text "georegion" kwx ly ts "mono" kwcolor
		text `"file.kml" ltmin ltmax lgmin lgmax` arx ly ts "mono" argcolor
		text "color op" arx2 ly ts "mono" optcolor
		image "images/georegion.png" 85 25 25 0
		textfile "code/georegion.dsh" 5 35 2 "mono"
	eslide

	slide bgcolor fgcolor
		image "images/geoborder.png" 50 75 45 0
		ctext "ltmax" 50   95 ts "mono"
		ctext "ltmin" 50   53 ts "mono"
		ctext "lgmax" 76   75 ts "mono"
		etext "lgmin" 27.5 75 ts "mono"
		text  "color/lw" 10 65 ts
		line 21 66 43 66 0.2
		circle 43 66 1
		hline 0 47 100 hlsize hlcolor hlop
		text "geoborder" kwx ly ts "mono" kwcolor
		text `"file.kml" ltmin ltmax lgmin lgmax` arx ly ts "mono" argcolor
		text "lw color" arx2 ly ts "mono" optcolor
		image "images/geoborder.png" 85 25 25 0
		textfile "code/geoborder.dsh" 5 35 2 "mono"
	eslide

	slide bgcolor fgcolor
		textcode "code/continents.d" 30 35 20 1.2
		image "images/geolabel.png" 50 75 45 0
		ctext "ltmax" 50   95 ts "mono"
		ctext "ltmin" 50   53 ts "mono"
		ctext "lgmax" 76   75 ts "mono"
		etext "lgmin" 27.5 75 ts "mono"
		text  "geo:lat,long<tab>Label" 5 65 ts
		hline 35 66 30 0.1
		hline 0 47 100 hlsize hlcolor hlop
		text "geolabel" kwx ly ts "mono" kwcolor
		text `"loc" ltmin ltmax lgmin lgmax` arx ly ts "mono" argcolor
		arx2-=7
		text "size color op" arx2 ly ts "mono" optcolor
		image "images/geolabel.png" 85 25 25 0
		textfile "code/geolabel.dsh" 5 35 2 "mono"
	eslide

	slide bgcolor fgcolor
		image "images/geomark.png" 50 75 45 0
		ctext "ltmax" 50   95 ts "mono"
		ctext "ltmin" 50   53 ts "mono"
		ctext "lgmax" 76   75 ts "mono"
		etext "lgmin" 27.5 75 ts "mono"
		text  "geo:lat,long" 5 65 ts
		hline 20 66 25 0.1
		textcode "code/gc.d" 30 35 35 1.2
		arx-=2
		hline 0 47 100 hlsize hlcolor hlop
		text "geomark" kwx ly ts "mono" kwcolor
		text `"loc" ltmin ltmax lgmin lgmax` arx ly ts "mono" argcolor
		text "size color op" arx2 ly ts "mono" optcolor
		image "images/geomark.png" 85 25 25 0
		textfile "code/geomark.dsh" 5 35 2 "mono"
	eslide

	slide bgcolor fgcolor
		image "images/geoloc.png" 50 75 45 0
		ctext "ltmax" 50   95 ts "mono"
		ctext "ltmin" 50   53 ts "mono"
		ctext "lgmax" 76   75 ts "mono"
		etext "lgmin" 27.5 75 ts "mono"
		text  "geo:lat,long<tab>Label" 5 65 ts

		list 75 67 1.5 "mono" "" 100 1.2
			li "Label Position (pos):"
			li `"c" Center above`
			li `"b" Begin Aligned`
			li `"e" End Aligned`
			li `"u" Center below`
		elist
		hline 35 66 10 0.1
		kwx=2
		arx=kwx+12
		arx2=arx+48
		textcode "code/gc.d" 30 35 35 1.2
		hline 0 47 100 hlsize hlcolor hlop
		text "geoloc" kwx ly ts "mono" kwcolor
		text `"loc" ltmin ltmax lgmin lgmax` arx ly ts "mono" argcolor
		text "pos size font color op" arx2 ly ts "mono" optcolor
		image "images/geoloc.png" 85 25 25 0
		textfile "code/geoloc.dsh" 5 35 2 "mono"
	eslide

	slide bgcolor fgcolor
		image "images/geoimage.png" 50 75 40 0
		ctext "ltmax" 50   95 ts
		ctext "ltmin" 50   53 ts
		ctext "lgmax" 76   75 ts
		etext "lgmin" 27.5 75 ts
		ctext "w"     48.7   88 ts
		ctext "h"     37   78 ts
		ubrace 48.7    87 13.5 1 2 0.2 "black"
		lbrace 38.5  79 11.2 2 2 0.2 "black"
		vline  29 48 7 0.2
		etext  "geo:lat,long<tab>imgfile" 29 56 2.5
		kwx=5
		arx=kwx+20
		arx2=arx+50
		hline 0 47 100 hlsize hlcolor hlop
		text "geoimage" kwx ly ts "mono" kwcolor
		text `"loc" ltmin ltmax lgmin lgmax w h` arx ly ts "mono" argcolor
		image "images/geoimage.png" 85 25 25 0
		textfile "code/geopic.dsh" 5 32 2 "mono"
	eslide	

	slide bgcolor fgcolor
		kwx=5
		arx=kwx+13
		arx2=arx+60
		image "images/geopath.png" 50 75 45 0
		ctext "ltmax" 50   95 ts "mono"
		ctext "ltmin" 50   53 ts "mono"
		ctext "lgmax" 76   75 ts "mono"
		etext "lgmin" 27.5 75 ts "mono"
		text  "color/lw" 85 71 ts "mono"
		line  85 72 45 72 0.1
		text  "p2" 35 67 ts "mono"
		text  "p1" 65 77 ts "mono"
		hline 0 47 100 hlsize hlcolor hlop
		text "geopath" kwx ly ts "mono" kwcolor
		text  `"p1" "p2" ltmin ltmax lgmin lgmax lw` arx ly ts "mono" argcolor
		text  "color op" arx2 ly ts "mono" optcolor
		image "images/geopath.png" 82 25 35 0
		textfile "code/geopath.dsh" 5 39 1.6 "mono"
	eslide

	slide bgcolor fgcolor
		image "images/geoarc.png" 50 75 45 0
		ctext "ltmax" 50   95 ts "mono"
		ctext "ltmin" 50   53 ts "mono"
		ctext "lgmax" 76   75 ts "mono"
		etext "lgmin" 27.5 75 ts "mono"
		text  "color/lw" 85 71 ts "mono"
		line  85 72 65 72 0.1
		text  "p2" 35 67 ts "mono"
		text  "p1" 65 77 ts "mono"
		hline 0 47 100 hlsize hlcolor hlop
		text "geoarc" kwx ly ts "mono" kwcolor
		text `"p1" "p2" ltmin ltmax lgmin lgmax lw` arx ly ts "mono" argcolor
		text "color op" arx2 ly ts "mono" optcolor
		image "images/geoarc.png" 82 25 35 0
		textfile "code/geoarc.dsh" 5 39 1.6 "mono"
	eslide

	slide bgcolor fgcolor
		image "images/geopathfile.png" 50 75 45 0
		ctext "ltmax" 50   95 ts
		ctext "ltmin" 50   53 ts
		ctext "lgmax" 76   75 ts
		etext "lgmin" 27.5 75 ts
		textcode "code/roadtrip.d" 25 37 27 1

		kwx=5
		arx=kwx+20
		arx2=arx+50
		hline 0 47 100 hlsize hlcolor hlop
		text "geopathfile" kwx ly ts "mono" kwcolor
		text `"file" ltmin ltmax lgmin lgmax` arx ly ts "mono" argcolor
		text "lw color op" arx2 ly ts "mono" optcolor
		image "images/roadtrip.png" 82 25 35 0
		textfile "code/geopathfile.dsh" 5 32 1.6 "mono"
	eslide	
edeck
